package Hypernet.Process;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Restrictions;
/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    { 
        System.out.println( "Hello World!" );
        List<Student>studentList= new ArrayList<Student>();
        List<Course>courseList= new ArrayList<Course>();

       // @SuppressWarnings("unused")
		SessionFactory factory = new Configuration().configure().buildSessionFactory();
        Session session =factory.openSession();
        session.beginTransaction();
        //Student s=new Student();
       // s.setStudentId(1);
       // s.setStudentName("Kumar");
        //s.setStudentAge(21);
       
      //  Integer id=(Integer)session.save(s);
        @SuppressWarnings("deprecation")
		Criteria cr = session.createCriteria(Student.class); 
		 
		 // cr.add(Restrictions.gt("studentAge", 21));
        cr.add(Restrictions.eq("studentId", 72));
		  studentList= cr.list();
		  System.out.println(studentList.size());
		  for(Student st:studentList)
		  {
			  System.out.println(st);
			  System.out.println(st.getStudentId()+" "+st.getStudentName()+" "+st.getStudentAge());
		  }
		 // System.out.println(studentList);
        //session.getTransaction().commit();
        //System.out.println(id);*/
        /*Course c=new Course();
       c.setStudentId(72);
       c.setCourseName("MAthematics");
       session.save(c);*/
        Criteria co = session.createCriteria(Course.class); 
       co.add(Restrictions.eq("studentId", 72));
		  courseList= co.list();
		
		  for(Course ct:courseList)
		  {
			  System.out.println("Course id "+ct.getCourseId()+" Couse name"+ct.getCourseName());
			 
		  }
		  for(Student student: studentList) {
			  System.out.println( student.getStudentName()+"|" 
			  +student.getStudentAge()+"|"
			  +student.getStudentId()+"|"
			  +(!student.getCourses().isEmpty()?student.getCourses().get(0).getCourseName()
			  :"") ); }
       
       session.getTransaction().commit();
    }
    
}
